# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    

    - uses: actions/checkout@v2
    - uses: montudor/action-zip@v0.1.0
      with:
         args: zip -r SchedulerFunctions.zip python/
    - uses: montudor/action-zip@v0.1.0
      with:
         args: zip ResourcesApi.zip ResourcesApi.py 
    - uses: montudor/action-zip@v0.1.0
      with:
         args: zip SchedulerCheckAndApply.zip SchedulerCheckAndApply.py 
         
         
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1
        
    - name: CloudFormation Deploy Stacks
      run: | 
        aws cloudformation deploy  --stack-name S3 --template-file CloudFormationStacks/S3.yml --no-fail-on-empty-changeset
        aws cloudformation deploy  --stack-name Scheduler --template-file CloudFormationStacks/Scheduler.yml --no-fail-on-empty-changeset --capabilities CAPABILITY_NAMED_IAM
    - name: Copy files to S3 with the AWS CLI
      run: |
        ARN=$(aws cloudformation list-exports --query "Exports[?Name=='CodeSourceBucketARN'].Value" --no-paginate --output text )
        BucketName=$(aws cloudformation list-exports --query "Exports[?Name=='CodeSourceBucketARN'].Value" --no-paginate --output text | sed 's/arn:aws:s3::://')
        echo "BucketName $BucketName"
        aws s3 cp SchedulerCheckAndApply.zip s3://$BucketName
        aws s3 cp ResourcesApi.zip s3://$BucketName
        aws s3 cp SchedulerFunctions.zip s3://$BucketName
    - name: lambda update
      run: |
        LayerArn=$(aws cloudformation list-exports --query "Exports[?Name=='SchedulerFunctionsLayerARN'].Value" --no-paginate --output text )
        echo "LayerArn: ${LayerArn}"
        LayerName=$(echo $LayerArn | cut --fields=7 --delimiter=: )
        echo "LayerName: ${LayerName}"
        NewVersionNumber=$(aws lambda publish-layer-version --layer-name $LayerName --zip-file fileb://SchedulerFunctions.zip --compatible-runtimes python3.6 python3.7 | awk '/"Version":/ {print $2}' | sed 's/,//')
        echo "NewVersionNumber: ${NewVersionNumber}"
        BucketName=$(aws cloudformation list-exports --query "Exports[?Name=='CodeSourceBucketARN'].Value" --no-paginate --output text | sed 's/arn:aws:s3::://')
        echo "BucketName $BucketName"
        aws lambda update-function-code --function-name ResourcesApi --s3-bucket $BucketName --s3-key ResourcesApi.zip
        aws lambda update-function-code --function-name SchedulerCheckAndApply --s3-bucket $BucketName --s3-key fileb://SchedulerCheckAndApply.zip
        aws lambda update-function-configuration --function-name SchedulerCheckAndApply --layers "arn:aws:lambda:eu-west-1:809572216788:layer:ResourcesFunctionsforScheduler:${NewVersionNumber}"
        aws lambda update-function-configuration --function-name ResourcesApi --layers "arn:aws:lambda:eu-west-1:809572216788:layer:ResourcesFunctionsforScheduler:${NewVersionNumber}"


